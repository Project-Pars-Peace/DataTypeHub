[
    {
        "level": "meta-data-id",
        "title": "id",
        "content-type": "rawtext",
        "content": "us_obstetric"
    },
    {
        "level": "meta-data-parents",
        "title": "parents",
        "content-type": "list_of_strings",
        "content": [
            "US"
        ]
    },
    {
        "level": "meta-data-title",
        "title": "title",
        "content-type": "rawtext",
        "content": "Obstetric Ultrasound Fetal development monitoring"
    },
    {
        "level": "meta-data-acronyms",
        "title": "acronyms",
        "content-type": "list_of_strings",
        "content": [
            "",
            "",
            "",
            ""
        ]
    },
    {
        "level": "meta-data-shortDescription",
        "title": "shortDescription",
        "content-type": "rawtext",
        "content": "Obstetric ultrasound for fetal development monitoring utilizes high-frequency sound waves to create real-time images of the fetus, placenta, and uterus. A transducer emits sound waves that penetrate the body and reflect off tissues, with the returning echoes captured and converted into visual images. This non-invasive, safe imaging technique assesses fetal growth, anatomy, and well-being by measuring parameters like fetal size, organ development, and amniotic fluid levels, aiding in the detection of potential abnormalities or complications during pregnancy."    },
    {
        "level": "3",
        "title": "3. Imaging Principle",
        "content-type": "markdown",
        "content": "Obstetric ultrasound for fetal development monitoring utilizes high-frequency sound waves to create real-time images of the fetus, placenta, and uterus. A transducer emits sound waves that penetrate the body and reflect off tissues, with the returning echoes captured and converted into visual images. This non-invasive, safe imaging technique assesses fetal growth, anatomy, and well-being by measuring parameters like fetal size, organ development, and amniotic fluid levels, aiding in the detection of potential abnormalities or complications during pregnancy."    },
    {
        "level": "4",
        "title": "4. Data Type & File Format",
        "content-type": "table",
        "content": [
            [
                "4.1.Primary File Format(s)",
                "4.2.Data Type",
                "4.3.Related Data Types (parent type)",
                "4.4.Standard Storage Format (which one in 4.1)",
                "4.5.Conversion Solutions + Reference",
                "description",
                "references"
            ],
            [
                "DICOM (.dcm)",
                "grayscale imaging",
                "US",
                "DICOM (.dcm)",
                "NIfTI (.nii, .nii.gz)",
                "nii2dcm is a specialized conversion tool that transforms NIfTI neuroimaging files (.nii/.nii.gz) into DICOM format, addressing a significant gap in medical imaging workflows. Built with Python as its core language, the solution leverages several powerful tools including pip for dependency management, Docker for containerization, SimpleITK for image processing, and highdicom for DICOM manipulation. The tool features a straightforward command-line interface that allows users to specify DICOM modality types during conversion (such as MR for MRI scans). For flexible deployment, nii2dcm is available both as a pip-installable package and as a pre-built Docker container. The project is actively developed with support for additional imaging modalities planned for future releases, making it a valuable resource for researchers and clinicians working with medical imaging data.",
                "https://github.com/tomaroberts/nii2dcm"
            ],
            [
                ".MOV",
                "In some advanced applications, Doppler imaging (a functional imaging modality) may be used alongside grayscale imaging to assess blood flow in vessels.",
                "",
                "",
                "Analyze (.hdr/.img)",
                "FSL (FMRIB Software Library) offers a comprehensive suite of command-line utilities for neuroimaging data processing and analysis. These tools collectively enable researchers to manipulate, transform, and extract valuable information from brain imaging datasets. The utility tools include format converters (fslascii2img, fsl2ascii), file type managers (fslchfiletype, fslcreatehd, fsleditHD), mathematical operators (fslmaths, fslfft), data extraction tools (fslroi, fslmeants), statistical analyzers (fslstats, fslcc), dimensional manipulators (fslmerge, fslsplit, fslslice), and header information processors (fslhd, fslinfo, fslval). Additionally, FSL provides specialized orientation tools (fslreorient2std, fslcpgeom, fslorient, fslswapdim) that ensure proper spatial alignment of brain images according to standard neuroanatomical conventions. Written primarily in C++ with Python interfaces, FSL integrates multiple computational libraries including NIfTI I/O libraries, matrix calculation tools, statistical packages, and optimization algorithms to deliver a powerful platform for neuroscientific research that maintains compatibility with major neuroimaging data formats.",
                "https://fsl.fmrib.ox.ac.uk/fsl/docs/#/utilities/fslutils"
            ],
            [
                "AVI (.avi),",
                "While EUS typically produces 2D images, modern systems can also generate 3D volumetric reconstructions by combining multiple 2D slices.",
                "",
                "",
                " SAFA - Datatypes SAFA - Datatypes  100% B15  AVI (.avi)      \t AVI (.avi) Turn on screen reader support   To enable screen reader support, press Ctrl+Alt+Z To learn about keyboard shortcuts, press Ctrl+slashArman Gharehbaghi has left the document.",
                "\"Sante DICOM Editor is a versatile and powerful tool designed for handling DICOM files, which are commonly used in medical imaging. Here are some of its key features:  DICOM File Editing: You can create, edit, and modify DICOM files, including adding or removing attributes and editing sequence attributes.  2D/3D Viewer: It provides advanced viewing capabilities for both 2D and 3D medical images.  Anonymizer: The tool can anonymize DICOM files to protect patient privacy.  Converter: It can convert various file formats (e.g., JPEG, TIFF, BMP, PNG) to DICOM and vice versa.  PACS Client and Mini PACS Server: It supports Picture Archiving and Communication System (PACS) functionalities, allowing you to store, retrieve, and manage medical images.  Patient CD/DVD Burner: You can burn patient data onto CDs or DVDs, complete with a built-in viewer.  Batch Processing: The editor supports batch processing, enabling you to modify multiple DICOM files simultaneously.  DICOM Network Services: It supports various DICOM network services, including C-FIND, C-MOVE, C-STORE, and C-ECHO.\"",
                "https://santesoft.com/win/sante-dicom-editor/howto/movies-to-dicom.html"
            ],
            [
                ".RAW",
                "",
                "",
                "",
                "MP4 (.mp4) ",
                "\"Sante DICOM Editor is a versatile and powerful tool designed for handling DICOM files, which are commonly used in medical imaging. Here are some of its key features:  DICOM File Editing: You can create, edit, and modify DICOM files, including adding or removing attributes and editing sequence attributes.  2D/3D Viewer: It provides advanced viewing capabilities for both 2D and 3D medical images.  Anonymizer: The tool can anonymize DICOM files to protect patient privacy.  Converter: It can convert various file formats (e.g., JPEG, TIFF, BMP, PNG) to DICOM and vice versa.  PACS Client and Mini PACS Server: It supports Picture Archiving and Communication System (PACS) functionalities, allowing you to store, retrieve, and manage medical images.  Patient CD/DVD Burner: You can burn patient data onto CDs or DVDs, complete with a built-in viewer.  Batch Processing: The editor supports batch processing, enabling you to modify multiple DICOM files simultaneously.  DICOM Network Services: It supports various DICOM network services, including C-FIND, C-MOVE, C-STORE, and C-ECHO.\"",
                "https://santesoft.com/win/sante-dicom-editor/howto/movies-to-dicom.html"
            ],
            [
                "MP4 (.mp4) ",
                "",
                "",
                "",
                "JPEG (.jpg)",
                "This Python script automates the conversion of JPEG, PNG, or BMP images into DICOM files by loading the image with Pillow, handling various image modes to extract pixel data as a NumPy array, and then constructing a DICOM dataset using pydicom. It meticulously sets essential DICOM tags, including file metadata, image dimensions, photometric interpretation, pixel representation, and generates unique identifiers for the DICOM object. Finally, it saves the populated DICOM dataset as a .dcm file, ensuring compatibility with medical imaging systems by adhering to DICOM standards.",
                "https://github.com/jwitos/JPG-to-DICOM/tree/master"
            ],
            [
                ".SR",
                "",
                "",
                "",
                "PNG (.png) ",
                "\"This Python script replaces the pixel data of an existing DICOM file with the pixel data from a PNG or JPG image. It reads a pre-existing DICOM file and a new image, then, based on the image's mode (grayscale 'L' or color 'RGBA'), it extracts the pixel data into a NumPy array, sets the appropriate DICOM tags (dimensions, photometric interpretation, samples per pixel, bit depth, and pixel representation), and replaces the original DICOM's `PixelData` with the new image's pixel data, finally saving the modified DICOM file with a new name. \"",
                "https://github.com/amine0110/convert-images-from-jpr-or-png-into-dicom"
            ],
            [
                "JPEG (.jpg)",
                "",
                "",
                "",
                "MPEG-2",
                "\"This code snippet is a Maven `pom.xml` file, which defines the project structure, dependencies, and metadata for a Java application named \"\"mpeg2dcm,\"\" designed to convert MPEG video files to DICOM format. It specifies project details like group ID, artifact ID, version, and licensing (MIT License), along with developer and source code management information. The file outlines the project's dependencies, including the `dcm4che-core` library for DICOM handling, logging libraries (Log4j and SLF4j), and utility libraries (commons-io and commons-cli). Crucially, it declares a dependency on the dcm4che repository, indicating that the project leverages the dcm4che library for DICOM manipulation, suggesting that the application processes MPEG video data and constructs DICOM files by utilizing the dcm4che framework's capabilities. \"",
                "https://github.com/tomdoel/mpg2dcm/tree/main"
            ],
            [
                ".TIFF",
                "",
                "",
                "",
                "MOV (.MOV)",
                "\"Sante DICOM Editor is a versatile and powerful tool designed for handling DICOM files, which are commonly used in medical imaging. Here are some of its key features:  DICOM File Editing: You can create, edit, and modify DICOM files, including adding or removing attributes and editing sequence attributes.  2D/3D Viewer: It provides advanced viewing capabilities for both 2D and 3D medical images.  Anonymizer: The tool can anonymize DICOM files to protect patient privacy.  Converter: It can convert various file formats (e.g., JPEG, TIFF, BMP, PNG) to DICOM and vice versa.  PACS Client and Mini PACS Server: It supports Picture Archiving and Communication System (PACS) functionalities, allowing you to store, retrieve, and manage medical images.  Patient CD/DVD Burner: You can burn patient data onto CDs or DVDs, complete with a built-in viewer.  Batch Processing: The editor supports batch processing, enabling you to modify multiple DICOM files simultaneously.  DICOM Network Services: It supports various DICOM network services, including C-FIND, C-MOVE, C-STORE, and C-ECHO.\"",
                "https://santesoft.com/win/sante-dicom-editor/howto/movies-to-dicom.html"
            ],
            [
                "PNG (.png) ",
                "",
                "",
                "",
                "Raw data files (.RAW)",
                "\"This Python code demonstrates how to generate a synthetic 3D DICOM series from a NumPy array using the SimpleITK library, ensuring it's readable by DICOM viewers.  Here's a breakdown:  Array Generation and Image Creation:  It generates a 3D NumPy array filled with random numbers, allowing the user to specify the data type (int16 or float64). This array is then converted into a SimpleITK image, and its spacing is set. DICOM Metadata Configuration:  The code initializes a sitk.ImageFileWriter to write DICOM files. It creates a list of DICOM tag values (series_tag_values) to populate the metadata of each slice. This includes tags for series time, date, image type (DERIVED\\SECONDARY), series instance UID, image orientation, and series description. If the image data type is float64, it adds additional metadata tags related to rescale slope and intercept, bits allocated, bits stored, high bit, and pixel representation. This is crucial for correctly representing floating-point pixel values in DICOM. Slice Writing:  The writeSlices function is defined to write individual slices of the 3D image as DICOM files. For each slice, it sets the shared series tags and slice-specific tags, such as instance creation date and time, image position (patient), and instance number. The slice is then written to the specified output directory with a .dcm extension. DICOM Series Reading and Verification:  After writing the DICOM series, the code reads it back using sitk.ImageSeriesReader. It configures the reader to load all DICOM tags, including private tags. It then compares the spacing of the re-read image with the original image to verify that the DICOM series was written and read correctly. The code also handles errors if the specified directory does not contain a DICOM series. In essence, this code provides a practical example of how to create a DICOM series from a NumPy array, paying careful attention to the necessary metadata, especially when dealing with floating-point pixel values. It also demonstrates how to read the newly created DICOM series.\"",
                "https://simpleitk.readthedocs.io/en/master/link_DicomSeriesFromArray_docs.html"
            ],
            [
                ".VIV / .VOL",
                "",
                "",
                "",
                "TIFF (.TIFF)",
                "\"This document describes a sophisticated process for converting Whole Slide Imaging (WSI) files (SVS, generic TIFF, and OME-TIFF) into dual-personality DICOM-TIFF files, emphasizing lossless conversion and detailed metadata management. The conversion, driven by a Bourne Shell script and the `pixelmed` toolkit's `TIFFToDicom` Java program, preserves the original compressed tile data, re-injects JPEG tables, and corrects certain TIFF defects. It generates a DICOM series with one file per pyramid layer and channel, extracting macro and label images. Metadata is gathered from various sources, including TIFF headers, SVS ImageDescription tags, OME-XML, and collection-specific spreadsheets, and is mapped to DICOM attributes via a JSON metadata file. The process handles multiple slides per subject by grouping them into a single DICOM study, ensuring consistent UIDs and dates through state files. For multichannel images, channel-specific metadata is encoded in the DICOM SpecimenPreparationSequence and OpticalPathSequence. Collection-specific clinical trial information is also included. The output DICOM files, while TIFF-compatible, contain only one layer each and may not work with tools expecting combined layers. The inclusion of offset tables (BOT or EOT) depends on the collection's conversion date. The process is illustrated with examples from TCGA and HTAN collections, highlighting the handling of metadata, compression, and specific DICOM attributes. \"",
                "https://github.com/ImagingDataCommons/idc-wsi-conversion"
            ],
            [
                "WAV (.wav)",
                "",
                "",
                "",
                "MP4",
                "\"Sante DICOM Editor  Sante DICOM Editor is a user-friendly application that allows conversion of various video formats, including MP4, to DICOM files. To convert using this tool:  Navigate to \"\"File\"\" > \"\"Image\"\" > \"\"Batch Image\"\" > \"\"Convert Movies (avi, wmv, mpg, mp4) to DICOM\"\". Select the folder containing your MP4 files. Click \"\"Convert\"\" to generate DICOM files from the selected videos. This process creates a new DICOM file for each video, which can later be edited to modify header information such as patient details.  SANTESOFT.COM  2. Filestar  Filestar is a versatile file conversion tool that supports converting MP4 files to DICOM format. To perform the conversion:  Right-click on the MP4 file(s) on your desktop and select \"\"Convert with Filestar\"\". In the search box, type \"\"convert to dicom\"\". Press \"\"Convert\"\" to initiate the process. This method provides a straightforward approach to converting video files without the need for complex configurations. \"",
                "https://filestar.com/skills/mp4/convert-mp4-to-dicom"
            ],
            [
                "",
                "",
                "",
                "",
                "WAV",
                "\"Read the WAV File: Use an audio processing library to read the WAV file and extract its data. Create a DICOM File: Utilize the chosen DICOM library to create a new DICOM file, populating the necessary metadata fields as specified by the Basic Voice Audio Waveform Storage SOP Class. Embed the Audio Data: Insert the audio data from the WAV file into the appropriate DICOM data elements, ensuring that the data is correctly formatted and encoded. Save the DICOM File: Finalize and save the DICOM file, ensuring it adheres to the standard's requirements. Verify the DICOM File: After conversion, use DICOM validation tools to ensure that the file complies with the DICOM standard and can be correctly interpreted by DICOM-compliant systems.\"",
                "https://dicom.nema.org/dicom/supps/sup30_lb.pdf?utm_source=chatgpt.com"
            ],
            [
                "",
                "",
                "",
                "",
                "SR",
                "\"PixelMed offers Java-based tools and libraries for working with DICOM SR files. These tools facilitate the reading, creation, and modification of SR documents, as well as conversion to other formats. For a comprehensive understanding of DICOM SR structures and operations, refer to the \"\"DICOM Structured Reporting\"\" book by Dr. David Clunie, available through PixelMed.  \"",
                "https://www.dclunie.com/pixelmed/DICOMSR.book.pdf?utm_source=chatgpt.com"
            ],
            [
                "",
                "",
                "",
                "",
                " VIV / VOL",
                "a MATLAB-based tool for converting 3D image volumes from NifTi format to DICOMs. This repository contains a GUI which can be used to assign values to common DICOM fields. It also contains functions which can be used in your own code to streamline workflows. This work is part of the U24 co-clinical trial of which CIVM at Duke University is a participant. This work has been funded by NIH U24CA220245.",
                "https://github.com/mdholbrook/U24_DICOM_tool"
            ]
        ]
    },
    {
        "level": "5",
        "title": "5. Typical Resolution & Image Dimensions",
        "content-type": "table",
        "content": [
            [
                "5.1.Spatial Resolution",
                "5.2.Voxel Size / Pixel Spacing",
                "5.3.Temporal Resolution (if applicable)"
            ],
            [
                "Typically 256 \u00d7 256 pixels to 512 \u00d7 512 pixels",
                "0.1 mm \u00d7 0.1 mm to 0.5 mm \u00d7 0.5 mm for 2D imaging.",
                "No"
            ],
            [
                "For 3D/4D ultrasound, resolution can vary (e.g., 200 \u00d7 200 \u00d7 200 voxels).",
                "or 3D imaging, voxel size depends on the depth and field of view (e.g., 0.5 mm \u00d7 0.5 mm \u00d7 0.5 mm).",
                ""
            ]
        ]
    },
    {
        "level": "6",
        "title": "6. Data Size (Storage Requirements)",
        "content-type": "table",
        "content": [
            [
                "6.1.Single Image Size",
                "6.2.Typical Study Size"
            ],
            [
                "~100 KB to 500 KB per 2D image.",
                "~50 MB to 200 MB"
            ]
        ]
    },
    {
        "level": "7",
        "title": "7. Acquisition Device & Hardware Requirements",
        "content-type": "table",
        "content": [
            [
                "7.1.Equipment Used",
                "7.2.Typical Manufacturers"
            ],
            [
                "Equipment used for obstetric ultrasound and fetal development monitoring typically includes an ultrasound machine with a transabdominal or transvaginal transducer, which emits high-frequency sound waves to create images of the fetus and maternal structures. The machine is equipped with a monitor to display real-time images, and software for measuring fetal growth, heart rate, and amniotic fluid levels. Gel is applied to the abdomen to facilitate sound wave transmission. Advanced systems may include Doppler ultrasound to assess blood flow in the umbilical cord and fetal vessels, ensuring comprehensive monitoring of fetal health and development.",
                "GE Healthcare, Philips, Siemens Healthineers, Canon Medical Systems, Samsung Medison."
            ]
        ]
    },
    {
        "level": "8",
        "title": "8. Common Clinical Applications",
        "content-type": "table",
        "content": [
            [
                "8.1.Primary Uses",
                "8.2.Specialized Uses"
            ],
            [
                "Obstetric ultrasound for fetal development monitoring is primarily used to assess the growth, health, and development of the fetus during pregnancy. It helps detect abnormalities, confirm gestational age, monitor placental position and amniotic fluid levels, and evaluate fetal anatomy and movement. This non-invasive imaging tool is essential for ensuring the well-being of both the fetus and the mother throughout pregnancy.",
                "Specialized uses of obstetric ultrasound in fetal development monitoring include assessing gestational age, tracking fetal growth, and detecting congenital anomalies. It evaluates amniotic fluid levels, placental position, and umbilical blood flow, ensuring fetal well-being. Additionally, it aids in identifying multiple pregnancies, guiding interventions, and monitoring high-risk pregnancies to optimize maternal and fetal outcomes."
            ]
        ]
    },
    {
        "level": "9",
        "title": "9. Radiation & Safety Considerations",
        "content-type": "table",
        "content": [
            [
                "9.1.Ionizing Radiation",
                "9.2.Radiation Dose (if applicable)"
            ],
            [
                "No",
                "No"
            ]
        ]
    },
    {
        "level": "10",
        "title": "10. Preprocessing & Data Preparation",
        "content-type": "table",
        "content": [
            [
                "10.1.Common Preprocessing Steps",
                "10.2.Compression Methods (if any)"
            ],
            [
                "Conversion of raw ultrasound data to DICOM format.Noise reduction and image enhancement.Alignment and stitching for 3D/4D imaging.",
                "Lossless compression (e.g., JPEG-LS) for DICOM images. Lossy compression (e.g., JPEG) may be used for non-diagnostic purposes."
            ]
        ]
    },
    {
        "level": "11",
        "title": "11. Challenges & Limitations",
        "content-type": "table",
        "content": [
            [
                "11.1.Technical Challenges",
                "11.2.Clinical Limitations"
            ],
            [
                "mage quality can be affected by maternal body habitus (e.g., obesity).Limited field of view in 3D/4D imaging.Motion artifacts due to fetal movement.",
                "Difficulty in visualizing certain structures due to fetal position or shadowing.Operator-dependent variability in image acquisition and interpretation. Limited ability to detect subtle abnormalities in early gestation."
            ]
        ]
    },
    {
        "level": "12",
        "title": "12. References (Website, Paper, etc.)",
        "content-type": "table",
        "content": [
            [
                "https://www.glowm.com/section-view/heading/Diagnostic%20Obstetric%20Ultrasound/item/199",
                "Column 2"
            ],
            [
                "https://pmc.ncbi.nlm.nih.gov/articles/PMC10931841/",
                ""
            ],
            [
                "https://pubmed.ncbi.nlm.nih.gov/33160820/",
                ""
            ],
            [
                "https://www.frontiersin.org/journals/endocrinology/articles/10.3389/fendo.2023.1233187/full",
                ""
            ],
            [
                "https://www.ncbi.nlm.nih.gov/books/NBK594334/",
                ""
            ]
        ]
    },
    {
        "level": "prepration-meta-data-prepared_by",
        "title": "prepared_by",
        "content-type": "rawtext",
        "content": "Mohammadreza Ghaffarzadeh-Esfahani"
    },
    {
        "level": "prepration-meta-data-confirmed_by",
        "title": "confirmed_by",
        "content-type": "rawtext",
        "content": ""
    },
    {
        "level": "prepration-meta-data-date_of_preparation",
        "title": "date_of_preparation",
        "content-type": "rawtext",
        "content": "2025-05-04"
    },
    {
        "level": "prepration-meta-data-planned_next_review",
        "title": "planned_next_review",
        "content-type": "rawtext",
        "content": ""
    },
    {
        "level": "prepration-meta-data-requires_completion",
        "title": "requires_completion",
        "content-type": "rawtext",
        "content": ""
    }
]